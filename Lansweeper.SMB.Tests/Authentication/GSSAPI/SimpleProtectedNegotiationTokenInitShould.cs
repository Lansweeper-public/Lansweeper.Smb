using Lansweeper.Smb.Authentication.GSSAPI;
using Lansweeper.Smb.Authentication.GSSAPI.SPNEGO;

namespace Lansweeper.SMB.Tests.Authentication.GSSAPI;

internal class SimpleProtectedNegotiationTokenInitShould
{
    [Test]
    public void ConstructPropertiesCorrectlyFromBuffer()
    {
        byte[] mechToken = [
          0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00,
          0x01, 0x00, 0x00, 0x00, 0x97, 0x82, 0x08, 0xe2,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x0a, 0x00, 0x5a, 0x29, 0x00, 0x00, 0x00, 0x0f
        ];

        byte[] buffer = [
          0xa0, 0x3e,
          0x30, 0x3c, 0xa0, 0x0e, 0x30, 0x0c, 0x06, 0x0a,
          0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0x37, 0x02,
          0x02, 0x0a, 0xa2, 0x2a, 0x04, 0x28,
          ..mechToken
        ];

        SimpleProtectedNegotiationTokenInit sut = new(buffer);

        sut.MechanismTypeList.Should().ContainSingle()
            .Which.Should().BeEquivalentTo(GssIdentifiers.NTLMSSPIdentifier);
        sut.MechanismToken.Should().BeEquivalentTo(mechToken);
    }


    [Test]
    public void GetBytesCorrectly()
    {
        byte[] mechToken = [
          0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00,
          0x01, 0x00, 0x00, 0x00, 0x97, 0x82, 0x08, 0xe2,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x0a, 0x00, 0x5a, 0x29, 0x00, 0x00, 0x00, 0x0f
        ];

        byte[] expectedBytes = [
          0xa0, 0x3e,
          0x30, 0x3c, 0xa0, 0x0e, 0x30, 0x0c, 0x06, 0x0a,
          0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0x37, 0x02,
          0x02, 0x0a, 0xa2, 0x2a, 0x04, 0x28,
          ..mechToken
        ];

        SimpleProtectedNegotiationTokenInit sut = new()
        {
            MechanismTypeList = [GssIdentifiers.NTLMSSPIdentifier],
            MechanismToken = mechToken
        };

        byte[] actualBytes = sut.GetBytes();

        actualBytes.Should().BeEquivalentTo(expectedBytes);
    }
}
