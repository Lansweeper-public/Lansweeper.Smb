using Lansweeper.Smb.Authentication.NTLM;

namespace Lansweeper.SMB.Tests.Authentication.NTLM;

/// <summary>
/// message 739 from smb-on-windows-10.pcapng
/// </summary>
internal class AuthenticateMessageShould
{
    [Test]
    public void ConstructPropertiesCorrectlyFromBuffer()
    {
        byte[] lmResponse = [
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        ];

        byte[] ntResponse = [
          0xda, 0x2b, 0x99, 0x4c, 0xa4, 0xc0, 0xa8, 0xd5,
          0xf8, 0x35, 0x5c, 0x08, 0x71, 0x7c, 0x28, 0x00,
          0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x7f, 0xd5, 0xf4, 0x21, 0x85, 0x27, 0xd2, 0x01,
          0x4c, 0xc1, 0xcf, 0xe7, 0x21, 0xfc, 0x87, 0x2f,
          0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x1e, 0x00,
          0x44, 0x00, 0x45, 0x00, 0x53, 0x00, 0x4b, 0x00,
          0x54, 0x00, 0x4f, 0x00, 0x50, 0x00, 0x2d, 0x00,
          0x56, 0x00, 0x31, 0x00, 0x46, 0x00, 0x41, 0x00,
          0x30, 0x00, 0x55, 0x00, 0x51, 0x00, 0x01, 0x00,
          0x1e, 0x00, 0x44, 0x00, 0x45, 0x00, 0x53, 0x00,
          0x4b, 0x00, 0x54, 0x00, 0x4f, 0x00, 0x50, 0x00,
          0x2d, 0x00, 0x56, 0x00, 0x31, 0x00, 0x46, 0x00,
          0x41, 0x00, 0x30, 0x00, 0x55, 0x00, 0x51, 0x00,
          0x04, 0x00, 0x1e, 0x00, 0x44, 0x00, 0x45, 0x00,
          0x53, 0x00, 0x4b, 0x00, 0x54, 0x00, 0x4f, 0x00,
          0x50, 0x00, 0x2d, 0x00, 0x56, 0x00, 0x31, 0x00,
          0x46, 0x00, 0x41, 0x00, 0x30, 0x00, 0x55, 0x00,
          0x51, 0x00, 0x03, 0x00, 0x1e, 0x00, 0x44, 0x00,
          0x45, 0x00, 0x53, 0x00, 0x4b, 0x00, 0x54, 0x00,
          0x4f, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x56, 0x00,
          0x31, 0x00, 0x46, 0x00, 0x41, 0x00, 0x30, 0x00,
          0x55, 0x00, 0x51, 0x00, 0x07, 0x00, 0x08, 0x00,
          0x7f, 0xd5, 0xf4, 0x21, 0x85, 0x27, 0xd2, 0x01,
          0x06, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00,
          0x08, 0x00, 0x30, 0x00, 0x30, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
          0x00, 0x20, 0x00, 0x00, 0xad, 0x86, 0x5b, 0x6d,
          0x08, 0xa9, 0x5d, 0x0e, 0x76, 0xa9, 0x4e, 0x2c,
          0xa0, 0x13, 0xab, 0x3f, 0x69, 0xc4, 0xfd, 0x94,
          0x5c, 0xca, 0x01, 0xb2, 0x77, 0x70, 0x0f, 0xd2,
          0xb3, 0x05, 0xca, 0x01, 0x0a, 0x00, 0x10, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x09, 0x00, 0x28, 0x00, 0x63, 0x00, 0x69, 0x00,
          0x66, 0x00, 0x73, 0x00, 0x2f, 0x00, 0x31, 0x00,
          0x39, 0x00, 0x32, 0x00, 0x2e, 0x00, 0x31, 0x00,
          0x36, 0x00, 0x38, 0x00, 0x2e, 0x00, 0x31, 0x00,
          0x39, 0x00, 0x39, 0x00, 0x2e, 0x00, 0x31, 0x00,
          0x33, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        ];

        byte[] sessionKey = [
            0xdc, 0xf9, 0x4e, 0x45, 0x26, 0x3a, 0xec, 0x7d,
            0xc2, 0xe9, 0x65, 0xc3, 0xa5, 0x64, 0xf9, 0x3e
        ];

        byte[] mic = [
          0x6d, 0xca, 0xfb, 0x8a, 0x72, 0x9e, 0x68, 0x03,
          0x02, 0x45, 0xe9, 0x61, 0x7f, 0x87, 0x3e, 0x1b
        ];


        byte[] buffer = [
            0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00,
            0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00,
            0x9c, 0x00, 0x00, 0x00, 0x48, 0x01, 0x48, 0x01,
            0xb4, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x1e, 0x00,
            0x58, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
            0x76, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x1e, 0x00,
            0x7e, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,
            0xfc, 0x01, 0x00, 0x00, 0x15, 0x82, 0x88, 0xe2,
            0x0a, 0x00, 0x5a, 0x29, 0x00, 0x00, 0x00, 0x0f,
            ..mic,
            0x44, 0x00, 0x45, 0x00, 0x53, 0x00, 0x4b, 0x00,
            0x54, 0x00, 0x4f, 0x00, 0x50, 0x00, 0x2d, 0x00,
            0x32, 0x00, 0x41, 0x00, 0x45, 0x00, 0x46, 0x00,
            0x4d, 0x00, 0x37, 0x00, 0x47, 0x00, 0x75, 0x00,
            0x73, 0x00, 0x65, 0x00, 0x72, 0x00, 0x44, 0x00,
            0x45, 0x00, 0x53, 0x00, 0x4b, 0x00, 0x54, 0x00,
            0x4f, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x32, 0x00,
            0x41, 0x00, 0x45, 0x00, 0x46, 0x00, 0x4d, 0x00,
            0x37, 0x00, 0x47, 0x00,
            ..lmResponse,
            ..ntResponse,
            ..sessionKey,
        ];

        AuthenticateMessage sut = new(buffer);

        sut.Signature.Should().Be("NTLMSSP\0");
        sut.MessageType.Should().Be(MessageTypeName.Authenticate);
        sut.LmChallengeResponse.Should().Equal(lmResponse);
        sut.NtChallengeResponse.Should().Equal(ntResponse);
        sut.DomainName.Should().Be("DESKTOP-2AEFM7G");
        sut.UserName.Should().Be("user");
        sut.WorkStation.Should().Be("DESKTOP-2AEFM7G");
        sut.EncryptedRandomSessionKey.Should().Equal(sessionKey);
        sut.NegotiateFlags = NegotiateFlags.UnicodeEncoding | NegotiateFlags.TargetNameSupplied
            | NegotiateFlags.Sign | NegotiateFlags.NTLMSessionSecurity | NegotiateFlags.AlwaysSign
            | NegotiateFlags.ExtendedSessionSecurity | NegotiateFlags.TargetInfo | NegotiateFlags.Version
            | NegotiateFlags.Use128BitEncryption | NegotiateFlags.KeyExchange | NegotiateFlags.Use56BitEncryption;
        sut.Version.Should().BeEquivalentTo(new NtlmVersion(10, 0, 10586, 15));
        sut.MIC.Should().Equal(mic);
    }

    [Test]
    public void GetBytesCorrectly()
    {
        byte[] lmResponse = [
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        ];

        byte[] ntResponse = [
          0xda, 0x2b, 0x99, 0x4c, 0xa4, 0xc0, 0xa8, 0xd5,
          0xf8, 0x35, 0x5c, 0x08, 0x71, 0x7c, 0x28, 0x00,
          0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x7f, 0xd5, 0xf4, 0x21, 0x85, 0x27, 0xd2, 0x01,
          0x4c, 0xc1, 0xcf, 0xe7, 0x21, 0xfc, 0x87, 0x2f,
          0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x1e, 0x00,
          0x44, 0x00, 0x45, 0x00, 0x53, 0x00, 0x4b, 0x00,
          0x54, 0x00, 0x4f, 0x00, 0x50, 0x00, 0x2d, 0x00,
          0x56, 0x00, 0x31, 0x00, 0x46, 0x00, 0x41, 0x00,
          0x30, 0x00, 0x55, 0x00, 0x51, 0x00, 0x01, 0x00,
          0x1e, 0x00, 0x44, 0x00, 0x45, 0x00, 0x53, 0x00,
          0x4b, 0x00, 0x54, 0x00, 0x4f, 0x00, 0x50, 0x00,
          0x2d, 0x00, 0x56, 0x00, 0x31, 0x00, 0x46, 0x00,
          0x41, 0x00, 0x30, 0x00, 0x55, 0x00, 0x51, 0x00,
          0x04, 0x00, 0x1e, 0x00, 0x44, 0x00, 0x45, 0x00,
          0x53, 0x00, 0x4b, 0x00, 0x54, 0x00, 0x4f, 0x00,
          0x50, 0x00, 0x2d, 0x00, 0x56, 0x00, 0x31, 0x00,
          0x46, 0x00, 0x41, 0x00, 0x30, 0x00, 0x55, 0x00,
          0x51, 0x00, 0x03, 0x00, 0x1e, 0x00, 0x44, 0x00,
          0x45, 0x00, 0x53, 0x00, 0x4b, 0x00, 0x54, 0x00,
          0x4f, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x56, 0x00,
          0x31, 0x00, 0x46, 0x00, 0x41, 0x00, 0x30, 0x00,
          0x55, 0x00, 0x51, 0x00, 0x07, 0x00, 0x08, 0x00,
          0x7f, 0xd5, 0xf4, 0x21, 0x85, 0x27, 0xd2, 0x01,
          0x06, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00,
          0x08, 0x00, 0x30, 0x00, 0x30, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
          0x00, 0x20, 0x00, 0x00, 0xad, 0x86, 0x5b, 0x6d,
          0x08, 0xa9, 0x5d, 0x0e, 0x76, 0xa9, 0x4e, 0x2c,
          0xa0, 0x13, 0xab, 0x3f, 0x69, 0xc4, 0xfd, 0x94,
          0x5c, 0xca, 0x01, 0xb2, 0x77, 0x70, 0x0f, 0xd2,
          0xb3, 0x05, 0xca, 0x01, 0x0a, 0x00, 0x10, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x09, 0x00, 0x28, 0x00, 0x63, 0x00, 0x69, 0x00,
          0x66, 0x00, 0x73, 0x00, 0x2f, 0x00, 0x31, 0x00,
          0x39, 0x00, 0x32, 0x00, 0x2e, 0x00, 0x31, 0x00,
          0x36, 0x00, 0x38, 0x00, 0x2e, 0x00, 0x31, 0x00,
          0x39, 0x00, 0x39, 0x00, 0x2e, 0x00, 0x31, 0x00,
          0x33, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        ];

        byte[] sessionKey = [
            0xdc, 0xf9, 0x4e, 0x45, 0x26, 0x3a, 0xec, 0x7d,
            0xc2, 0xe9, 0x65, 0xc3, 0xa5, 0x64, 0xf9, 0x3e
        ];

        byte[] mic = [
          0x6d, 0xca, 0xfb, 0x8a, 0x72, 0x9e, 0x68, 0x03,
          0x02, 0x45, 0xe9, 0x61, 0x7f, 0x87, 0x3e, 0x1b
        ];

        byte[] domainName = [
          0x44, 0x00, 0x45, 0x00, 0x53, 0x00, 0x4b, 0x00,
          0x54, 0x00, 0x4f, 0x00, 0x50, 0x00, 0x2d, 0x00,
          0x32, 0x00, 0x41, 0x00, 0x45, 0x00, 0x46, 0x00,
          0x4d, 0x00, 0x37, 0x00, 0x47, 0x00
        ];

        byte[] user = [0x75, 0x00, 0x73, 0x00, 0x65, 0x00, 0x72, 0x00];

        byte[] workstation = [
          0x44, 0x00, 0x45, 0x00, 0x53, 0x00, 0x4b, 0x00,
          0x54, 0x00, 0x4f, 0x00, 0x50, 0x00, 0x2d, 0x00,
          0x32, 0x00, 0x41, 0x00, 0x45, 0x00, 0x46, 0x00,
          0x4d, 0x00, 0x37, 0x00, 0x47, 0x00
        ];



        byte[] expectedBytes = [
            0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, // Signature
            0x03, 0x00, 0x00, 0x00, // Message Type
            0x18, 0x00, 0x18, 0x00, 0x9c, 0x00, 0x00, 0x00, // LmChallengeResponseFields
            0x48, 0x01, 0x48, 0x01, 0xb4, 0x00, 0x00, 0x00, // NtChallengeResponseFields
            0x1e, 0x00, 0x1e, 0x00, 0x58, 0x00, 0x00, 0x00, // DomainNameFields
            0x08, 0x00, 0x08, 0x00, 0x76, 0x00, 0x00, 0x00, // UserNameFields
            0x1e, 0x00, 0x1e, 0x00, 0x7e, 0x00, 0x00, 0x00, // WorkstationFields
            0x10, 0x00, 0x10, 0x00, 0xfc, 0x01, 0x00, 0x00, // EncryptedRandomSessionKeyFields
            0x15, 0x82, 0x88, 0xe2, // NegotiateFlags
            0x0a, 0x00, 0x5a, 0x29, 0x00, 0x00, 0x00, 0x0f, // Version
            ..mic,
            ..domainName,
            ..user,
            ..workstation,
            ..lmResponse,
            ..ntResponse,
            ..sessionKey,
        ];

        AuthenticateMessage sut = new()
        {
            LmChallengeResponse = lmResponse,
            NtChallengeResponse = ntResponse,
            DomainName = "DESKTOP-2AEFM7G",
            UserName = "user",
            WorkStation = "DESKTOP-2AEFM7G",
            EncryptedRandomSessionKey = sessionKey,
            NegotiateFlags = NegotiateFlags.UnicodeEncoding | NegotiateFlags.TargetNameSupplied
                | NegotiateFlags.Sign | NegotiateFlags.NTLMSessionSecurity | NegotiateFlags.AlwaysSign
                | NegotiateFlags.ExtendedSessionSecurity | NegotiateFlags.TargetInfo | NegotiateFlags.Version
                | NegotiateFlags.Use128BitEncryption | NegotiateFlags.Use56BitEncryption,
            Version = new NtlmVersion(10, 0, 10586, 15),
            MIC = mic
        };

        byte[] actualBytes = sut.GetBytes();

        actualBytes.Should().Equal(expectedBytes);
    }

}